#include <iostream>
#include <ctime>
#include <cstdlib>

const long long N = 100000000; // Increased the array size for a longer execution time

float Product_n(const float* a, const float* b, long long n) {
    float result = 0.0f;
    for (long long i = 0; i < n; ++i) {
        result += a[i] * b[i];
    }
    return result;
}

int main() {
    float* a = new float[N];
    float* b = new float[N];

    // Initialize vectors with random values
    std::srand(static_cast<unsigned int>(std::time(nullptr)));
    for (long long i = 0; i < N; ++i) {
        a[i] = static_cast<float>(std::rand()) / RAND_MAX;
        b[i] = static_cast<float>(std::rand()) / RAND_MAX;
    }

    // Measure time for naive implementation
    clock_t begin_n = clock();
    float n_result = Product_n(a, b, N);
    clock_t end_n = clock();
    double time_n = static_cast<double>(end_n - begin_n) / CLOCKS_PER_SEC;

    std::cout << "Product: " << n_result << std::endl;
    std::cout << "Time elapsed for n implementation: " << time_n << " seconds" << std::endl;
    delete[] a;
    delete[] b;

    return 0;
}
